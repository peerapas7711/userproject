import 'package:flutter/material.dart';
import 'package:cached_network_image/cached_network_image.dart';

class PlaceList1 extends StatelessWidget {
  static final String path = "lib/src/pages/lists/list1.dart";

  @override
  Widget build(BuildContext context) {
    // TODO: implement build
    return Scaffold(
      appBar: AppBar(
        title: Text("Place List 1"),
        backgroundColor: Colors.deepOrangeAccent,
        elevation: 2,
        actions: <Widget>[
          Container(
            padding: EdgeInsets.all(10),
            child: Icon(Icons.filter_list),
          )
        ],
      ),
      body: Lists(),
    );
  }
}

class Item {
  final String? title;
  final String? catagory;
  final String? place;
  final String? ratings;
  final String? discount;
  final String? image;

  Item(
      {this.title,
      this.catagory,
      this.place,
      this.ratings,
      this.discount,
      this.image});
}

class Lists extends StatelessWidget {
  final List<Item> _data = [
    Item(
        title: 'Gardens By the Bay',
        catagory: "Gardens",
        place: "Singapore",
        ratings: "5.0/80",
        discount: "10 %",
        image:
            "https://images.pexels.com/photos/672142/pexels-photo-672142.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"),
    Item(
        title: 'Singapore Zoo',
        catagory: "Parks",
        place: "Singapore",
        ratings: "4.5/90",
        discount: null,
        image:
            "https://images.pexels.com/photos/1736222/pexels-photo-1736222.jpeg?cs=srgb&dl=adult-adventure-backpacker-1736222.jpg&fm=jpg"),
    Item(
        title: 'National Orchid Garden',
        catagory: "Parks",
        place: "Singapore",
        ratings: "4.5/90",
        discount: "12 %",
        image:
            "https://images.pexels.com/photos/62403/pexels-photo-62403.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"),
    Item(
        title: 'Godabari',
        catagory: "Parks",
        place: "Singapore",
        ratings: "4.5/90",
        discount: "15 %",
        image:
            "https://images.pexels.com/photos/189296/pexels-photo-189296.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"),
    Item(
        title: 'Rara National Park',
        catagory: "Parks",
        place: "Singapore",
        ratings: "4.5/90",
        discount: "12 %",
        image:
            "https://images.pexels.com/photos/1319515/pexels-photo-1319515.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500"),
  ];

  @override
  Widget build(BuildContext context) {
    return ListView.builder(
      padding: EdgeInsets.all(6),
      itemCount: _data.length,
      itemBuilder: (BuildContext context, int index) {
        Item item = _data[index];
        return Card(
          elevation: 3,
          child: Row(
            children: <Widget>[
              Container(
                height: 125,
                width: 110,
                padding:
                    EdgeInsets.only(left: 0, top: 10, bottom: 70, right: 20),
                decoration: BoxDecoration(
                    image: DecorationImage(
                        image: NetworkImage(item.image!), fit: BoxFit.cover)),
                child: item.discount == null
                    ? Container()
                    : Container(
                        color: Colors.deepOrange,
                        child: Column(
                          mainAxisSize: MainAxisSize.min,
                          children: <Widget>[
                            Text(
                              item.discount!,
                              style: TextStyle(
                                  color: Colors.white,
                                  fontWeight: FontWeight.normal),
                            ),
                            Text(
                              "Discount",
                              style: TextStyle(
                                  color: Colors.white,
                                  fontWeight: FontWeight.normal),
                            ),
                          ],
                        ),
                      ),
              ),
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: <Widget>[
                    Text(
                      item.title!,
                      style: TextStyle(
                          color: Colors.deepOrange,
                          fontWeight: FontWeight.w700,
                          fontSize: 17),
                    ),
                    Text(
                      item.catagory!,
                      style: TextStyle(fontSize: 14, color: Colors.black87),
                    ),
                    Text(
                      item.place!,
                      style: TextStyle(fontSize: 14, color: Colors.black87),
                    ),
                    SizedBox(
                      height: 10,
                    ),
                    Row(
                      children: <Widget>[
                        Icon(
                          Icons.star,
                          color: Colors.pink,
                          size: 18,
                        ),
                        Icon(
                          Icons.star,
                          color: Colors.pink,
                          size: 18,
                        ),
                        Icon(
                          Icons.star,
                          color: Colors.pink,
                          size: 18,
                        ),
                        Icon(
                          Icons.star,
                          color: Colors.pink,
                          size: 18,
                        ),
                        Icon(
                          Icons.star,
                          color: Colors.pink,
                          size: 18,
                        ),
                      ],
                    ),
                    Row(
                      children: <Widget>[
                        Text(
                          item.ratings!,
                          style: TextStyle(fontSize: 13),
                        ),
                        SizedBox(
                          width: 5,
                        ),
                        Text(
                          "Ratings",
                          style: TextStyle(fontSize: 13),
                        ),
                      ],
                    )
                  ],
                ),
              )
            ],
          ),
        );
      },
    );
  }
}

Widget _getItemUI(BuildContext context, int index) {
  return new Card(
      child: new Column(
    
    children: <Widget>[
      new ListTile(
        leading: new Image.asset(
          "assets/" + _allCities[index].image,
          fit: BoxFit.cover,
          width: 100.0,
        ),

        title: new Text(
          _allCities[index].name,
          style: new TextStyle(fontSize: 14.0, fontWeight: FontWeight.bold),
        ),
        subtitle: new Column(
            mainAxisAlignment: MainAxisAlignment.start,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: <Widget>[
              new Text(_allCities[index].country,
                  style: new TextStyle(
                      fontSize: 13.0, fontWeight: FontWeight.normal)),
              new Text('Population: ${_allCities[index].population}',
                  style: new TextStyle(
                      fontSize: 11.0, fontWeight: FontWeight.normal)),
            ]),
        //trailing: ,
        onTap: () {
          _showSnackBar(context, _allCities[index]);
        },
      )
    ],
  ));
}


//!-----------------------------------------------
GridView.builder(
            itemCount: activitymember.length,
            gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                crossAxisCount: 2,
                crossAxisSpacing: 2,
                mainAxisSpacing: 2,
                childAspectRatio: width / (height / 1.34)),
            // crossAxisCount: (GridView == Orientation.portrait) ? 2 : 2),
            itemBuilder: (context, index) {
              DateTime orDate =
                  DateTime.parse('${activitymember[index].acDate}');
              DateTime orlDate =
                  DateTime.parse('${activitymember[index].acLdate}');
              return GestureDetector(
                onTap: () {
                  Navigator.pushNamed(context, '/showjoinac', arguments: {
                    'j_id': activitymember[index].jId,
                    'ac_id': activitymember[index].acId,
                    'ac_name': activitymember[index].acName,
                    'ac_type': activitymember[index].acType,
                    'ac_time': activitymember[index].acTime,
                    'ac_date': activitymember[index].acDate,
                    'ac_ldate': activitymember[index].acLdate,
                    'ac_number': activitymember[index].acNumber,
                    // 'ac_numberjoin': activitymember[index].acNumberjoin,
                    'ac_home': activitymember[index].acHome,
                    'ac_sub': activitymember[index].acSub,
                    'ac_district': activitymember[index].acDistrict,
                    'ac_province': activitymember[index].acProvince,
                    'ac_detel': activitymember[index].acDetel,
                    'ac_la': activitymember[index].acLa,
                    'ac_long': activitymember[index].acLong,
                    'u_name': activitymember[index].uName,
                    'u_lname': activitymember[index].uLname,
                    'u_email': activitymember[index].uEmail,
                    'u_tel': activitymember[index].uTel,
                  }).then((onGoBack));
                  // .then((onGoBack));
                },
                child: Card(
                  elevation: 3,
                  color: Theme.of(context).cardColor,
                  clipBehavior: Clip.antiAlias,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(20),
                  ),
                  child: Column(
                    children: [
                      ListTile(
                        // leading: Icon(Icons.arrow_drop_down_circle),
                        title: Text(
                          '${activitymember[index].acName}',
                          maxLines: 2,
                          style: TextStyle(
                              fontSize: 14.0,
                              color: Theme.of(context).primaryColor,
                              fontWeight: FontWeight.w800),
                        ),
                        subtitle: Text(
                          '(${activitymember[index].acType})',
                          style: TextStyle(
                            fontSize: 13.0,
                            color: Theme.of(context).primaryColor,
                          ),
                        ),
                      ),
                      // Image.asset(
                      //   'assets/images/123.png',
                      //   // color: Theme.of(context).primaryColor,
                      //   width: 120,
                      //   height: 100,
                      // ),
                      Container(
                        width: 160,
                        height: 100,
                        child: ClipRRect(
                            borderRadius: BorderRadius.circular(8.0),
                            child: _checkImage(
                                '${activitymember[index].imacImg}')),
                      ),
                      Padding(
                        padding: EdgeInsets.all(5.0),
                        child: Text(
                          '   ${activitymember[index].acDetel}',
                          maxLines: 2,
                          style: TextStyle(
                            fontSize: 12.0,
                            // fontWeight: FontWeight.w500,
                            color: Theme.of(context).primaryColor,
                            // color: Colors.black,
                          ),
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.only(right: 5.0),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.end,
                          children: [
                            Text(
                              'คนเข้าร่วม : ',
                              style: TextStyle(
                                fontSize: 12.0,
                                color: Theme.of(context).primaryColor,
                                // color: Colors.black,
                              ),
                            ),
                            Text(
                              '0 / ',
                              style: TextStyle(
                                fontSize: 12.0,
                                color: Theme.of(context).primaryColorLight,
                                // color: Colors.black,
                              ),
                            ),
                            Text(
                              '${activitymember[index].acNumber} คน',
                              style: TextStyle(
                                fontSize: 12.0,
                                color: Theme.of(context).primaryColorLight,
                                // color: Colors.black,
                              ),
                            ),
                          ],
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.only(right: 5.0),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.end,
                          children: [
                            Text(
                              'จังหวัด ',
                              style: TextStyle(
                                fontSize: 12.0,
                                color: Theme.of(context).primaryColor,
                                // color: Colors.black,
                              ),
                            ),
                            Text(
                              '${activitymember[index].acProvince}',
                              style: TextStyle(
                                fontSize: 12.0,
                                color: Theme.of(context).primaryColorLight,
                                // color: Colors.black,
                              ),
                            ),
                          ],
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.only(
                          right: 5.0,
                        ),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.end,
                          children: [
                            Text(
                              'วันที่ ',
                              style: TextStyle(
                                fontSize: 12.0,
                                color: Theme.of(context).primaryColor,
                                // color: Colors.black,
                              ),
                            ),
                            Text(
                              '${_format.format(orDate)}',
                              style: TextStyle(
                                fontSize: 12.0,
                                color: Theme.of(context).primaryColorLight,
                                // color: Colors.black,
                              ),
                            ),
                            SizedBox(
                              width: 5,
                            ),
                            Text(
                              'เวลา ',
                              style: TextStyle(
                                fontSize: 12.0,
                                color: Theme.of(context).primaryColor,
                                // color: Colors.black,
                              ),
                            ),
                            Text(
                              '${activitymember[index].acTime}น.',
                              style: TextStyle(
                                fontSize: 12.0,
                                color: Theme.of(context).primaryColorLight,
                                // color: Colors.black,
                              ),
                            ),
                          ],
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.only(
                            left: 5.0, right: 5.0, bottom: 5.0),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.end,
                          children: [
                            Text(
                              'วันสุดท้ายในการเข้าร่วม ',
                              style: TextStyle(
                                fontSize: 11.0,
                                color: Colors.grey,
                                fontStyle: FontStyle.italic,
                                // color: Colors.black,
                              ),
                            ),
                            Text(
                              '${_format.format(orlDate)}',
                              style: TextStyle(
                                fontSize: 11.0,
                                color: Colors.grey,
                                fontStyle: FontStyle.italic,
                                // color: Colors.black,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              );
            })